package com.example.dailyquestapp.presentation.quest

import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.example.dailyquestapp.data.local.DataStoreManager
import com.example.dailyquestapp.data.local.ProgressData
import kotlinx.coroutines.flow.*
import kotlinx.coroutines.launch

class QuestViewModel(
    private val dataStoreManager: DataStoreManager
) : ViewModel() {

    private val _progress = MutableStateFlow(ProgressData())
    val progress: StateFlow<ProgressData> = _progress.asStateFlow()

    init {
        viewModelScope.launch {
            dataStoreManager.progressFlow.collect { progress ->
                _progress.value = progress
            }
        }
    }

    fun saveProgress(points: Int, streak: Int, lastDay: Int) {
        viewModelScope.launch {
            dataStoreManager.saveProgress(points, streak, lastDay)
        }
    }
} 